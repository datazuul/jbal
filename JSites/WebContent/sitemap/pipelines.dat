<map:pipelines xmlns:map="http://apache.org/cocoon/sitemap/1.0">
<!-- =========================== Pipelines ================================= -->

 <!--+
     | Pipelines. The beef. Pipelines specify how the processing of your
     | content is done. Usually, a pipeline consists of several fragments
     | that specify the generation, transformation, and serialization of
     | SAX events.
     |
     | Processing is done in two steps:
     |
     | 1) The top level elements are executed in order of appearance until
     |    one signals success. These top level elements are usually
     |    matchers.
     |
     |    Other components are called depth-first to determine what
     |    fragments make up the processing pipeline. When a component
     |    fails, no nested components are called but the next component on
     |    the same level.
     |
     | 2) Once it is determined which generator, which transformers and
     |    wich serializer is used, these components are executed. During
     |    this, the pipeline may not be changed.
     |
     | You may have as many pipelines in your sitemap as you like.
     +-->

<!--
	<map:component-configurations>
		&auth-manager;	
      
    </map:component-configurations>
-->
    
    <map:pipeline>

		<map:match pattern="profile.html">
			<map:generate type="profiler"/>
			<map:transform src="stylesheets/xslt/profile2html.xsl">
				<map:parameter name="use-request-parameters" value="true"/>
			</map:transform>
			<map:serialize type="html"/>
		</map:match>
			
		<map:match pattern="profile.xml">
			<map:generate type="profiler"/>
			<map:serialize type="xml"/>
		</map:match>
	</map:pipeline>
    
	<!-- &auth-pipeline;
	&main-pipeline; -->

  <map:pipeline>
    
<!--+ 
    | Match ausiliari
    +-->
    
    <map:match pattern="components.zip">
        <map:read src="/components.zip" />
    </map:match>
            
    <map:match pattern="page/*">
        <map:redirect-to uri="../pageview?pcode={1}"/>
    </map:match>


    <!-- HTMLs -->
    <!-- map:match pattern="*.html">
      <map:read mime-type="text/html" src="{1}.html"/>
    </map:match-->
    

    <!-- handle invalid continuations -->

    <!-- this style of handling invalidContinuation is now deprecated: -->
    <!-- this URI will never be called automatically anymore. -->
    <!-- see handle-errors below -->
    <map:match pattern="invalidContinuation">
      <map:generate src="documents/invalidContinuation.xml"/>
      <map:serialize type="xml"/>
    </map:match>

    <!-- the new non-hardcoded way of handling invalidContinuation -->
    <map:handle-errors>
      <map:select type="exception">
        <map:when test="invalid-continuation">
          <map:generate src="documents/invalidContinuation.html"/>
          <map:serialize type="xhtml"/>
        </map:when>
        <map:when test="file-not-found">
          <map:generate src="not-found.xml"/>
          <map:serialize type="xhtml"/>
        </map:when>
      </map:select>
    </map:handle-errors>
    
  </map:pipeline>
    
	
	<!-- =========================================================== -->
	<!-- Ultima pipeline di mounting - chiamate ai livelli piu' alti -->
	<!-- =========================================================== -->
		
	<map:pipeline>
	
		&hostselector;
		
		
		<!-- map:match pattern="*/">
  			<map:mount check-reload="yes" src="{1}/" uri-prefix="{1}" />
		</map:match>
		<map:match pattern="*/*">
  			<map:mount check-reload="yes" src="{1}/" uri-prefix="{1}" />
		</map:match>
		<map:match pattern="*/**">
  			<map:mount check-reload="yes" src="{1}/" uri-prefix="{1}" />
		</map:match-->
		<map:handle-errors>
			<map:select type="exception">
				<map:when test="invalid-continuation">
					<map:generate src="documents/invalidContinuation.html"/>
					<map:serialize type="xhtml"/>
			    </map:when>
			    <map:when test="file-not-found">
					<map:generate src="not-found.xml"/>
					<map:serialize type="xhtml"/>
			    </map:when>
			</map:select>
		</map:handle-errors>
	</map:pipeline>
    
 </map:pipelines>